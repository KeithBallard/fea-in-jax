# conda-forge openmpi has cuda-support built in
# you'll just need to install the correct cuda libs in the next step
# note that we also need the conda forge compilers

conda install -c conda-forge openmpi compilers

# run one of the following two commands, depending on whether you need cuda 11 or 12
# I used cuda 12 on Raider

#conda install -c conda-forge cudatoolkit cuda-version=11
conda install -c conda-forge cuda-cudart cuda-version=12

# check if cuda was enabled correctly with

ompi_info | grep "cuda"

# you should see "--with-cuda" in the Configure command line,
# and cuda should appear as an MCA accelerator

# double check to make sure mpicc is on the path and it works

which mpicc
mpicc --version

# then install mpi4py with pip

pip install mpi4py

# check if it was built correctly with

python -c 'from mpi4py import MPI; print("MPI Version:", MPI.Get_version()); print("MPI Vendor:", MPI.get_vendor())'

# to run the example files you'll also need to install cupy and jax:

conda install -c conda-forge cupy

# for cuda 12:
pip install "jax[cuda12]"

# there are 2 tests:
# 1) test_mpi4py_cuda_jax
#    - simply send/recv test with cupy arrays 
#
# 2) test_mpi4py_cuda_jax_async
#    - rough 2D halo-exchange among 4 processes
#    - uses async p2p isend, as well as probe and recv
#

(cd test_mpi4py_cuda_jax; ./test_mpi4py_cuda_jax.sh)
(cd test_mpi4py_cuda_jax_async; ./test_mpi4py_cuda_jax_async.sh)
